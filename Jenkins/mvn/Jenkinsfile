pipeline {
    agent {
        label 'ecs_fargate_slaves_default'
    }

    environment {
        ENVIRONMENT = 'main'
        VERSION = '1.0.1'
        ECR_REPO_NAME = 'app-book'
        AWS_REGION = 'us-east-1'
        APP_DIR = 'app-mvn'
    }

    stages {

        stage('Build and Push with Kaniko - TEST') {
            steps {
                script {
                    withCredentials([[
                        $class: 'AmazonWebServicesCredentialsBinding',
                        credentialsId: 'AWS_CREDENTIALS_ID',
                        accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                        secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                    ]]) {

                        def registry = sh(
                            script: """
                                aws sts get-caller-identity --query Account --output text
                            """, returnStdout: true
                        ).trim()
                        env.ECR_REGISTRY = "${registry}.dkr.ecr.${AWS_REGION}.amazonaws.com"

                        echo "ðŸ”‘ Authenticated to ${env.ECR_REGISTRY}"
                        def tempBuildDir = 'kaniko-temp-build'
                        sh "mkdir ${tempBuildDir}"
                        sh """
                            echo 'FROM eclipse-temurin:17-jre-alpine' > "${tempBuildDir}/Dockerfile"
                            echo 'WORKDIR /app' >> "${tempBuildDir}/Dockerfile"
                            echo 'RUN echo "Fake Java app" > app.log' >> "${tempBuildDir}/Dockerfile"
                            echo 'ENTRYPOINT ["sh", "-c", "echo Simulated Java app starting...; cat app.log; sleep 10; echo Simulated Java app done."]' >> "${tempBuildDir}/Dockerfile"
                            echo 'RUN echo "Finalizing image" && true'
                            echo "Generated Dockerfile content:"
                            cat "${tempBuildDir}/Dockerfile"
                        """
                        dir("${tempBuildDir}") {
                            echo "ðŸš€ Starting Kaniko build"

                            sh '''
                            /kaniko/executor \
                                --context=dir://$(pwd)/ \
                                --dockerfile=$(pwd)/Dockerfile \
                                --destination=${ECR_REGISTRY}/${ECR_REPO_NAME}:${VERSION} \
                                --cache=false \
                                --verbosity=info
                            '''

                            echo "âœ… Kaniko build complete"
                        }
                    }
                }
            }
        }
    }
}
